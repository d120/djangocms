# Generated by Django 2.2.17 on 2020-11-04 21:30

from django.apps import apps as global_apps
from django.db import migrations
from djangocms_file.models import get_templates as get_file_templates
from djangocms_picture.models import get_templates as get_picture_templates


def forwards_filer_file(apps, schema_editor):
    try:
        CMSPluginFilerFile = apps.get_model('cmsplugin_filer_file', 'FilerFile')
    except LookupError:
        return

    DjangoCMSFileFile = apps.get_model('djangocms_file', 'File')
    for old_object in CMSPluginFilerFile.objects.all():
        old_cmsplugin_ptr = old_object.cmsplugin_ptr
        new_object = DjangoCMSFileFile(
            file_name=old_object.title,
            file_src=old_object.file,
            # defaults for fields that don't exist in the old_object
            link_target='',
            template=get_file_templates()[0][0],
            show_file_size=1,
            # fields for the cms_cmsplugin table
            position=old_cmsplugin_ptr.position,
            language=old_cmsplugin_ptr.language,
            plugin_type='FilePlugin',
            creation_date=old_cmsplugin_ptr.creation_date,
            changed_date=old_cmsplugin_ptr.changed_date,
            parent=old_cmsplugin_ptr.parent,
            placeholder=old_cmsplugin_ptr.placeholder,
            depth=old_cmsplugin_ptr.depth,
            numchild=old_cmsplugin_ptr.numchild,
            path=old_cmsplugin_ptr.path,
        )
        old_object.delete()
        new_object.save()


def forwards_filer_folder(apps, schema_editor):
    try:
        CMSPluginFilerFolder = apps.get_model('cmsplugin_filer_folder', 'FilerFolder')
    except LookupError:
        return

    DjangoCMSFileFolder = apps.get_model('djangocms_file', 'Folder')
    for old_object in CMSPluginFilerFolder.objects.all():
        old_cmsplugin_ptr = old_object.cmsplugin_ptr
        new_object = DjangoCMSFileFolder(
            folder_src=old_object.folder,
            # defaults for fields that don't exist in the old_object
            template=get_file_templates()[0][0],
            link_target='',
            show_file_size=0,
            # fields for the cms_cmsplugin table
            position=old_cmsplugin_ptr.position,
            language=old_cmsplugin_ptr.language,
            plugin_type='FolderPlugin',
            creation_date=old_cmsplugin_ptr.creation_date,
            changed_date=old_cmsplugin_ptr.changed_date,
            parent=old_cmsplugin_ptr.parent,
            placeholder=old_cmsplugin_ptr.placeholder,
            depth=old_cmsplugin_ptr.depth,
            numchild=old_cmsplugin_ptr.numchild,
            path=old_cmsplugin_ptr.path,
        )
        old_object.delete()
        new_object.save()


def forwards_filer_image(apps, schema_editor):
    try:
        CMSPluginFilerImage = apps.get_model('cmsplugin_filer_image', 'FilerImage')
    except LookupError:
        return

    DjangoCMSPicture = apps.get_model('djangocms_picture', 'Picture')
    for old_object in CMSPluginFilerImage.objects.all():
        old_cmsplugin_ptr = old_object.cmsplugin_ptr
        attributes = {}
        if old_object.alt_text:
            attributes.update({'alt': old_object.alt_text})
        new_object = DjangoCMSPicture(
            caption_text=old_object.caption_text,
            external_picture=old_object.image_url
            if old_object.image_url else '',
            use_automatic_scaling=old_object.use_autoscale,
            width=old_object.width,
            height=old_object.height,
            use_crop=old_object.crop,
            use_upscale=old_object.upscale,
            alignment=old_object.alignment if old_object.alignment else '',
            picture=old_object.image,
            thumbnail_options=old_object.thumbnail_option,
            attributes=attributes,
            link_attributes=old_object.link_attributes,
            # defaults for fields that don't exist in the old_object
            use_no_cropping=0,
            template=get_picture_templates()[0][0],
            # fields for the cms_cmsplugin table
            position=old_cmsplugin_ptr.position,
            language=old_cmsplugin_ptr.language,
            plugin_type='PicturePlugin',
            creation_date=old_cmsplugin_ptr.creation_date,
            changed_date=old_cmsplugin_ptr.changed_date,
            parent=old_cmsplugin_ptr.parent,
            placeholder=old_cmsplugin_ptr.placeholder,
            depth=old_cmsplugin_ptr.depth,
            numchild=old_cmsplugin_ptr.numchild,
            path=old_cmsplugin_ptr.path,
        )
        old_object.delete()
        new_object.save()

def forwards_filer_video(apps, schema_editor):
    try:
        CMSPluginFilerVideo = apps.get_model('cmsplugin_filer', 'FilerVideo')
    except LookupError:
        return

    DjangoCMSVideo = apps.get_model('djangocms_video', 'Video')
    for old_object in CMSPluginFilerVideo.objects.all():
        old_cmsplugin_ptr = old_object.cmsplugin_ptr
        new_object = DjangoCMSVideo(
            movie = old_object.movie,
            movie_url = old_object.movie_url,
            image = old_object.image,
            width = old_object.width,
            height = old_object.height,
            auto_play = old_object.auto_play,
            auto_hide = old_object.auto_hide,
            fullscreen = old_object.fullscreen,
            loop = old_object.loop,
            bgcolor = old_object.bgcolor,
            textcolor = old_object.textcolor,
            seekbarcolor = old_object.seekbarcolor,
            seekbarbgcolor = old_object.seekbarbgcolor,
            loadingbarcolor = old_object.loadingbarcolor,
            buttonoutcolor = old_object.buttonoutcolor,
            buttonovercolor = old_object.buttonovercolor,
            buttonhighlightcolor = old_object.buttonhighlightcolor,
            # fields for the cms_cmsplugin table
            position=old_cmsplugin_ptr.position,
            language=old_cmsplugin_ptr.language,
            plugin_type='VideoPlugin',
            creation_date=old_cmsplugin_ptr.creation_date,
            changed_date=old_cmsplugin_ptr.changed_date,
            parent=old_cmsplugin_ptr.parent,
            placeholder=old_cmsplugin_ptr.placeholder,
            depth=old_cmsplugin_ptr.depth,
            numchild=old_cmsplugin_ptr.numchild,
            path=old_cmsplugin_ptr.path,
        )
        old_object.delete()
        new_object.save()

# == TODO ==
#
# * [ ] forward: djangocms-video
# * [x] forward: djangocms-file
# * [x] version: djangocms-picture
# * [ ] version: django-filer

# == Notes ==
#
# djangocms-picture 0008: added ``use_responsive_image`` (default='inherit')


class Migration(migrations.Migration):
    '''
    Move data from filer-plugins to the new djangocms-*-plugins. Inspiration:
    https://docs.djangoproject.com/en/2.0/howto/writing-migrations/
    #migrating-data-between-third-party-apps
    '''
    operations = [
        migrations.RunPython(forwards)
    ]
    dependencies = [
        ('d120', '0002_auto_20161217_1707'),
    ]
    run_before = []

    file_installed = global_apps.is_installed('cmsplugin_filer_file')
    folder_installed = global_apps.is_installed('cmsplugin_filer_folder')
    image_installed = global_apps.is_installed('cmsplugin_filer_image')
    teaser_installed = global_apps.is_installed('cmsplugin_filer_teaser')
    video_installed = global_apps.is_installed('cmsplugin_filer_video')

    # -- Images --

    if image_installed:
        dependencies.append(('cmsplugin_filer_image', '0010_auto_20191127_1058'))
        #('djangocms_picture', '0007_fix_alignment'),
        #('djangocms_picture', '0008_picture_use_responsive_image'),
        #('djangocms_picture', '0009_auto_20181212_1003'),
        #('djangocms_picture', '0010_auto_20190627_0432'),
        dependencies.append(('djangocms_picture', '0011_auto_20190314_1536'))
        operations.append(migrations.RunPython(forwards_filer_image))

    # -- Files & Folders --

    if file_installed:
        dependencies.append(('cmsplugin_filer_file', '0005_auto_20160713_1853'))
        operations.append(migrations.RunPython(forwards_filer_file))
    if folder_installed:
        dependencies.append(('cmsplugin_filer_folder', '0003_auto_20160713_1853'))
        operations.append(migrations.RunPython(forwards_filer_folder))

    if file_installed or folder_installed:
        #('djangocms_file', '0010_removed_null_fields'),
        dependencies.append(('djangocms_file', '0011_auto_20181211_0357'))

    # -- Teaser --

    if teaser_installed:
        dependencies.append(('cmsplugin_filer_teaser', '0004_auto_20191127_1058'))
        # TODO

    # -- Video --

    if video_installed:
        dependencies.append(('cmsplugin_filer_video', '0004_auto_20191126_2231'))
        dependencies.append(('djangocms_video', '0002_set_related_name_for_cmsplugin_ptr'))
        run_before.append(('djangocms_video', '0003_field_adaptions'))
        operations.append(migrations.RunPython(forwards_filer_video))
